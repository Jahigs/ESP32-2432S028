substitutions:
  font_directory: "fonts/"
  width: "320"
  height: "240"
  device_name: "your-name-here"
  nice_name: "your-name-here"

esphome:
  name: your-name-here
  on_boot:
    priority: -10
    then:
      - delay: 1s
      - light.turn_on:
          id: backlight
          brightness: 60%   # soft brightness to reduce inrush current
      - lambda: |-
          // init value text
          id(copies_int) = 0;
          char buffer[16];
          sprintf(buffer, "%02d Copies", 1);
          lv_label_set_text(id(sb_value_label), buffer);
          lv_obj_clear_flag(id(root_container), LV_OBJ_FLAG_SCROLLABLE);
          lv_obj_clear_flag(id(copies_row), LV_OBJ_FLAG_SCROLLABLE);
      - sensor.template.publish:
          id: copies_value
          state: 0

esp32:
  board: esp32dev
  framework:
    type: arduino
    platform_version: "54.03.21"

logger:
  baud_rate: 0

api:
  encryption: 
    key: "encryption key here"

ota:
  - platform: esphome
    password: "password here"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: ip here
    gateway: gateway here
    subnet: subnet here
  ap:
    ssid: ${device_name} Fallback Hotspot
    password: !secret ap_password

captive_portal:

mqtt:
  broker: !secret mqtt_host
  topic_prefix: ${device_name}
  discovery: false

# ------------------------------------------------------------
# Fonts & Colors
# ------------------------------------------------------------
font:
  - file:
      path: ${font_directory}Arimo-Regular.ttf
      type: local
    id: arimo14
    size: 21
    glyphs: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz -+"
  - file:
      path: ${font_directory}Arimo-Regular.ttf
      type: local
    id: arimo48
    size: 48
    glyphs: " .,Â°0123456789CF"

color:
  - id: room_bg_color
    hex: "000000"
  - id: default_button_bg_color
    hex: "1A6F91"
  - id: default_button_pressed_bg_color
    hex: "D3D3D3"
  - id: button_text_color
    hex: "FFFFFF"

# ------------------------------------------------------------
# Lights / Backlight
# ------------------------------------------------------------
light:
  - platform: monochromatic
    output: backlight_pwm
    name: "Display Backlight"
    id: backlight
    restore_mode: ALWAYS_ON
    default_transition_length: 500ms
  - platform: rgb
    name: "Front LED"
    id: front_led
    restore_mode: ALWAYS_OFF
    red: led_red
    green: led_green
    blue: led_blue

sensor:
  - platform: template
    name: "Copies Value"
    id: copies_value
    unit_of_measurement: "copies"
    accuracy_decimals: 0
    update_interval: never


spi:
  - id: tft
    clk_pin: GPIO14
    mosi_pin: GPIO13

  - id: touch
    clk_pin: GPIO25
    mosi_pin: GPIO32
    miso_pin: GPIO39

output:
  - platform: ledc
    pin: GPIO21
    id: backlight_pwm
    frequency: 500 Hz
  - platform: ledc
    pin: GPIO04
    id: led_red
    inverted: true
  - platform: ledc
    pin: GPIO17
    id: led_blue
    inverted: true
  - platform: ledc
    pin: GPIO16
    id: led_green
    inverted: true

globals:
  - id: recent_touch
    type: bool
    restore_value: no
    initial_value: "true"
  - id: copies_int
    type: int
    restore_value: no
    initial_value: "0"

touchscreen:
  platform: xpt2046
  spi_id: touch
  cs_pin: GPIO33
  interrupt_pin: GPIO36
  update_interval: 50ms
  threshold: 400
  calibration:
    x_min: 180
    x_max: 3800
    y_min: 240
    y_max: 3860
  transform:
    swap_xy: true
    mirror_x: false     # flip horizontally to fix touch row mapping
    mirror_y: true      # keep this for proper vertical alignment
  on_touch:
    then:
      - light.turn_on: backlight
      - lambda: |-
          id(recent_touch) = true;

display:
  - platform: ili9xxx
    model: ILI9341
    spi_id: tft
    cs_pin:
      number: GPIO15
      ignore_strapping_warning: true
    dc_pin:
      number: GPIO2
      ignore_strapping_warning: true
    reset_pin:
      number: GPIO12
      ignore_strapping_warning: true
    color_palette: 8BIT
    invert_colors: false
    dimensions:
      width: 320
      height: 240
    transform:
      swap_xy: true
      mirror_x: false     # flips text back to correct orientation
      mirror_y: false
    data_rate: 20MHz
    update_interval: 200ms



# ------------------------------------------------------------
# LVGL Layout
# ------------------------------------------------------------
lvgl:
  buffer_size: 25%
  theme:
    button:
      pressed:
        bg_color: 0xC0C0C0
        bg_grad_color: 0xC0C0C0
        bg_opa: COVER
      checked:
        bg_color: 0x000000
        bg_grad_color: 0x000000
        bg_opa: COVER
        text_color: 0x800080
    label:
      bg_opa: TRANSP
      border_width: 0

  pages:
    - id: main_page
      pad_all: 0
      widgets:
        - obj:
            id: root_container
            width: ${width}
            height: ${height}
            bg_color: room_bg_color
            border_width: 0
            radius: 0
            pad_all: 0px
            scrollbar_mode: "OFF"
            layout:
              type: grid
              grid_columns: [fr(1)]
              grid_rows:
                - fr(1)     # top
                - 8px
                - fr(2)   # middle taller for better balance
                - 8px
                - fr(1)     # bottom
              pad_row: 0px
              pad_column: 0px
            widgets:

              - button:
                  id: btn_1
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  radius: 8
                  bg_color: default_button_bg_color
                  pressed:
                    bg_color: default_button_pressed_bg_color
                  widgets:
                    - label:
                        text: "10 Copies"
                        text_font: arimo14
                        text_color: button_text_color
                        align: center
                  on_click:
                    then:
                      - sensor.template.publish:
                          id: copies_value
                          state: 10
                      - mqtt.publish:
                          topic: "${device_name}/print/copies"
                          payload: "10"

              - obj:
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 1
                  bg_opa: TRANSP
                  border_width: 0

              - obj:
                  id: copies_row
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  bg_opa: TRANSP
                  border_width: 0
                  layout:
                    type: grid
                    grid_columns: [64px, fr(1), 64px]
                    grid_rows: [fr(1)]
                    pad_column: 8px
                    pad_row: 0px
                  widgets:
                    - button:
                        id: copies_minus
                        grid_cell_column_pos: 0
                        grid_cell_row_pos: 0
                        grid_cell_x_align: STRETCH
                        grid_cell_y_align: STRETCH
                        radius: 8
                        bg_color: default_button_bg_color
                        pressed:
                          bg_color: default_button_pressed_bg_color
                        widgets:
                          - label:
                              text: "-"
                              text_font: arimo14
                              text_color: button_text_color
                              align: center
                        on_click:
                          then:
                            - lambda: |-
                                int v = id(copies_int);
                                if (v > 0) v--;
                                id(copies_int) = v;
                                char buffer[16];
                                sprintf(buffer, "%02d Copies", v);
                                lv_label_set_text(id(sb_value_label), buffer);

                    - button:
                        id: sb_value_btn
                        grid_cell_column_pos: 1
                        grid_cell_row_pos: 0
                        grid_cell_x_align: STRETCH
                        grid_cell_y_align: STRETCH
                        radius: 8
                        bg_color: default_button_bg_color
                        pressed:
                          bg_color: default_button_pressed_bg_color
                        widgets:
                          - label:
                              id: sb_value_label
                              text: !lambda |-
                                char buffer[16];
                                sprintf(buffer, "%02d Copies", id(copies_int));
                                return std::string(buffer);
                              text_font: arimo14
                              text_color: button_text_color
                              align: center
                        on_click:
                          then:
                            - lambda: |-
                                id(copies_value).publish_state(id(copies_int));
                            - mqtt.publish:
                                topic: "${device_name}/print/copies"
                                payload: !lambda |-
                                  return esphome::to_string(id(copies_int));

                    - button:
                        id: copies_plus
                        grid_cell_column_pos: 2
                        grid_cell_row_pos: 0
                        grid_cell_x_align: STRETCH
                        grid_cell_y_align: STRETCH
                        radius: 8
                        bg_color: default_button_bg_color
                        pressed:
                          bg_color: default_button_pressed_bg_color
                        widgets:
                          - label:
                              text: "+"
                              text_font: arimo14
                              text_color: button_text_color
                              align: center
                        on_click:
                          then:
                            - lambda: |-
                                int v = id(copies_int);
                                if (v < 25) v++;
                                id(copies_int) = v;
                                char buffer[16];
                                sprintf(buffer, "%02d Copies", v);
                                lv_label_set_text(id(sb_value_label), buffer);

              - obj:
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 3
                  bg_opa: TRANSP
                  border_width: 0

              - button:
                  id: btn_3
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 4
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  radius: 8
                  bg_color: default_button_bg_color
                  pressed:
                    bg_color: default_button_pressed_bg_color
                  widgets:
                    - label:
                        text: "25 Copies"
                        text_font: arimo14
                        text_color: button_text_color
                        align: center
                  on_click:
                    then:
                      - sensor.template.publish:
                          id: copies_value
                          state: 25
                      - mqtt.publish:
                          topic: "${device_name}/print/copies"
                          payload: "25"
